# Default values for kdr-galera.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.


image:
  registry: docker.io
  repository: kesterriley/mdb-test-10-4-server
  tag: latest
  ## Specify a imagePullPolicy
  ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
  ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
  ##
  pullPolicy: Always
  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ##
  # pullSecrets:
  #   - myRegistryKeySecretName


galera:
  name: test-cluster
  domainId: 200
  # An incremental number to add to the offset
  autoIncrementOffset: 0

cloneRemote: ""
remoteMaxscale: ""
backupcloneService: "ukdc-kdr-galera-backupstream.uk.svc.cluster.local"
restorebackupname: ""

mariabackup:
  enabled: true
  backupServiceService:
    type: NodePort
    port: 3305
    name: backupstream
    targetPort: 3305

nameOverride: ""
fullnameOverride: ""

updateStrategy:
  type: RollingUpdate

podAnnotations: {}

clusterDomain: cluster.local

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 3306
  # clusterIP: None
  # nodePort: 30001
  # loadBalancerIP:
  # loadBalancerSourceRanges:
  # - 10.10.10.0/24
  annotations: {}

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

replicaCount: 3

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

persistence:
  enabled: true
  mountPath: /var/lib/mysql
  annotations:
  accessModes:
    - ReadWriteOnce
  size: 15Gi
  ## Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  storageClass: "localhost"

livenessProbe:
  enabled: true
  initialDelaySeconds: 120
  periodSeconds: 10
  timeoutSeconds: 1
  successThreshold: 1
  failureThreshold: 3
readinessProbe:
  enabled: true
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 1
  successThreshold: 1
  failureThreshold: 3


mariadbConfiguration: |-
    ###############################################
    ## MaxScale configuration for MariaDB        ##
    ## Kester Riley <kesterriley@hotmail.com>    ##
    ## March 2020                                ##
    ###############################################
    [client]
    default-character-set = utf8
    [mysql]
    default-character-set = utf8
    [mysqld]
    auto_increment_increment=10
    bind-address=0.0.0.0
    binlog_format=ROW
    character-set-server = utf8
    collation-server = utf8_unicode_ci
    datadir=/var/lib/mysql
    default-storage-engine=innodb
    gtid-ignore-duplicates=ON
    init-connect = 'SET NAMES utf8'
    innodb_autoinc_lock_mode=2
    innodb_flush_log_at_trx_commit=2
    innodb_lock_schedule_algorithm=FCFS
    interactive_timeout=60
    log_bin=mariadb-node
    log_slave_updates=1
    log_error=/var/lib/mysql/mariadb.err
    max_connections=500
    max_user_connections=100
    skip-host-cache
    skip-name-resolve
    skip-slave-start
    wait_timeout=60
    wsrep_auto_increment_control=0
    wsrep_gtid_mode=ON
    wsrep_notify_cmd=/usr/local/bin/notify.sh
    wsrep_provider_options="gcache.size=1024M; gcache.keep_pages_size=1024M; gcache.recover=yes; gcs.fc_factor=0.8;"
    wsrep_provider=/usr/lib64/galera-4/libgalera_smm.so
    [sst]
    sst-syslog=-1
    progress=/tmp/mysql-console/fifo
    [mysqld_safe]
    #skip_log_error
    #syslog

maxscaleConfigurationMaster: |-
    ###############################################
    ## MaxScale configuration for Galera Cluster ##
    ## Kester Riley <kesterriley@hotmail.com>    ##
    ## March 2020                                ##
    ###############################################
    [MaxScale]
    # Enable or disable the substitution of environment variables in the MaxScale configuration file
    substitute_variables=true
    # Send output to Syslog 0 Disabled / 1 Enabled
    syslog=0
    # The number of worker threads that are handling the events coming from the kernel.
    threads=auto
    # Enable or disable the logging of messages whose syslog priority is info
    log_info=off
    # Enable or disable the logging of messages whose syslog priority is notice
    log_notice=on
    # Enable or disable the logging of messages whose syslog priority is warning
    log_warning=off
    # Enable or disable the logging of messages whose syslog priority is debug
    log_debug=off
    ############################################
    ## Settings for splitting read and writes ##
    ############################################
    [ReadWriteSplit-Service]
    localhost_match_wildcard_host=1
    router=readwritesplit
    servers=db1,db2,db3
    type=service
    user=$MAXSCALE_USER
    password=$MAXSCALE_USER_PASSWORD
    # Set a Version Name to identify a host
    #version_string=$MAX_SERVER
    [ReadWriteSplit-Listener]
    address=$READ_WRITE_LISTEN_ADDRESS
    port=$READ_WRITE_PORT
    protocol=$READ_WRITE_PROTOCOL
    service=ReadWriteSplit-Service
    type=listener
    ####################################################
    ## Settings for sending all traffic to the master ##
    ####################################################
    [MasterOnly-Service]
    localhost_match_wildcard_host=1
    router_options=master
    router=readconnroute
    servers=db1,db2,db3
    type=service
    user=$MAXSCALE_USER
    password=$MAXSCALE_USER_PASSWORD
    #version_string=$MAX_SERVER
    [MasterOnly-Listener]
    address=$MASTER_ONLY_LISTEN_ADDRESS
    port=$MASTER_ONLY_PORT
    protocol=$MASTER_ONLY_PROTOCOL
    service=MasterOnly-Service
    type=listener
    ################################
    ## Monitor for Galera Cluster ##
    ################################
    [Galera-Monitor]
    module=galeramon
    user=$MAXSCALE_MONITOR_USER
    password=$MAXSCALE_MONITOR_USER_PASSWORD
    servers=db1,db2,db3
    type=monitor
    use_priority=true
    disable_master_failback=true
    backend_connect_timeout=6
    backend_write_timeout=4
    backend_read_timeout=2
    monitor_interval=2500ms
    script=/usr/local/bin/maxscale_notify.sh --initiator=$INITIATOR --parent=$PARENT --children=$CHILDREN --event=$EVENT --node_list=$NODELIST --list=$LIST --master_list=$MASTERLIST --slave_list=$SLAVELIST --synced_list=$SYNCEDLIST
    ################################
    ## List of Servers referenced ##
    ################################
    [db1]
    type=server
    address=$DB1_ADDRESS
    port=$DB1_PORT
    protocol=MariaDBBackend
    priority=$DB1_PRIO
    [db2]
    type=server
    address=$DB2_ADDRESS
    port=$DB2_PORT
    protocol=MariaDBBackend
    priority=$DB2_PRIO
    [db3]
    type=server
    address=$DB3_ADDRESS
    port=$DB3_PORT
    protocol=MariaDBBackend
    priority=$DB3_PRIO
    #############################
    ## Used for Binlog Routing ##
    #############################
    #[BinlogRouting-Service]
    #type=service
    #servers=db1,db2,db3
    #router=binlogrouter
    #user=$MAXSCALE_USER
    #password=$MAXSCALE_USER_PASSWORD
    #server_id=1001003
    #binlogdir=/var/lib/maxscale/
    #heartbeat=60
    #burstsize=1M
    #[BinlogRouting-Listener]
    #type=listener
    #service=BinlogRouting-Service
    #protocol=$BINLOG_PROTOCOL
    #port=$BINLOG_PORT

maxscaleConfigurationPassive: |-
    ###############################################
    ## MaxScale configuration for Galera Cluster ##
    ## Kester Riley <kesterriley@hotmail.com>    ##
    ## March 2020                                ##
    ###############################################
    [MaxScale]
    # Enable or disable the substitution of environment variables in the MaxScale configuration file
    substitute_variables=true
    # Send output to Syslog 0 Disabled / 1 Enabled
    syslog=0
    # The number of worker threads that are handling the events coming from the kernel.
    threads=auto
    # Enable or disable the logging of messages whose syslog priority is info
    log_info=off
    # Enable or disable the logging of messages whose syslog priority is notice
    log_notice=on
    # Enable or disable the logging of messages whose syslog priority is warning
    log_warning=off
    # Enable or disable the logging of messages whose syslog priority is debug
    log_debug=off
    # Enable the setting of making this a active / passive cluster
    passive=true
    ############################################
    ## Settings for splitting read and writes ##
    ############################################
    [ReadWriteSplit-Service]
    localhost_match_wildcard_host=1
    router=readwritesplit
    servers=db1,db2,db3
    type=service
    user=$MAXSCALE_USER
    password=$MAXSCALE_USER_PASSWORD
    # Set a Version Name to identify a host
    #version_string=$MAX_SERVER
    [ReadWriteSplit-Listener]
    address=$READ_WRITE_LISTEN_ADDRESS
    port=$READ_WRITE_PORT
    protocol=$READ_WRITE_PROTOCOL
    service=ReadWriteSplit-Service
    type=listener
    ####################################################
    ## Settings for sending all traffic to the master ##
    ####################################################
    [MasterOnly-Service]
    localhost_match_wildcard_host=1
    router_options=master
    router=readconnroute
    servers=db1,db2,db3
    type=service
    user=$MAXSCALE_USER
    password=$MAXSCALE_USER_PASSWORD
    #version_string=$MAX_SERVER
    [MasterOnly-Listener]
    address=$MASTER_ONLY_LISTEN_ADDRESS
    port=$MASTER_ONLY_PORT
    protocol=$MASTER_ONLY_PROTOCOL
    service=MasterOnly-Service
    type=listener
    ################################
    ## Monitor for Galera Cluster ##
    ################################
    [Galera-Monitor]
    module=galeramon
    user=$MAXSCALE_MONITOR_USER
    password=$MAXSCALE_MONITOR_USER_PASSWORD
    servers=db1,db2,db3
    type=monitor
    use_priority=true
    disable_master_failback=true
    backend_connect_timeout=6
    backend_write_timeout=4
    backend_read_timeout=2
    monitor_interval=2500ms
    script=/usr/local/bin/maxscale_notify.sh --initiator=$INITIATOR --parent=$PARENT --children=$CHILDREN --event=$EVENT --node_list=$NODELIST --list=$LIST --master_list=$MASTERLIST --slave_list=$SLAVELIST --synced_list=$SYNCEDLIST
    ################################
    ## List of Servers referenced ##
    ################################
    [db1]
    type=server
    address=$DB1_ADDRESS
    port=$DB1_PORT
    protocol=MariaDBBackend
    priority=$DB1_PRIO
    [db2]
    type=server
    address=$DB2_ADDRESS
    port=$DB2_PORT
    protocol=MariaDBBackend
    priority=$DB2_PRIO
    [db3]
    type=server
    address=$DB3_ADDRESS
    port=$DB3_PORT
    protocol=MariaDBBackend
    priority=$DB3_PRIO
    #############################
    ## Used for Binlog Routing ##
    #############################
    #[BinlogRouting-Service]
    #type=service
    #servers=db1,db2,db3
    #router=binlogrouter
    #user=$MAXSCALE_USER
    #password=$MAXSCALE_USER_PASSWORD
    #server_id=1001003
    #binlogdir=/var/lib/maxscale/
    #heartbeat=60
    #burstsize=1M
    #[BinlogRouting-Listener]
    #type=listener
    #service=BinlogRouting-Service
    #protocol=$BINLOG_PROTOCOL
    #port=$BINLOG_PORT

nodeSelector: {}

tolerations: []

affinity: {}

## Prometheus exporter configuration
##
metrics:
  enabled: false
  ## Bitnami MySQL Prometheus exporter image
  ## ref: https://hub.docker.com/r/bitnami/mysqld-exporter/tags/
  ##
  image:
    registry: docker.io
    repository: bitnami/mysqld-exporter
    tag: 0.12.1-debian-10-r10
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ##
    # pullSecrets:
    #   - myRegistryKeySecretName
  ## MySQL Prometheus exporter containers' resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources:
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    limits: {}
    #   cpu: 0.5
    #   memory: 256Mi
    requests: {}
    #   cpu: 0.5
    #   memory: 256Mi
  ## MySQL Prometheus exporter service parameters
  ##
  service:
    type: ClusterIP
    port: 9104
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "9104"

  ## Prometheus Operator ServiceMonitor configuration
  ##
  serviceMonitor:
    enabled: false
    ## Namespace in which Prometheus is running
    ##
    # namespace: monitoring

    ## Interval at which metrics should be scraped.
    ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
    ##
    # interval: 10s

    ## Timeout after which the scrape is ended
    ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
    ##
    # scrapeTimeout: 10s

    ## ServiceMonitor selector labels
    ## ref: https://github.com/bitnami/charts/tree/master/bitnami/prometheus-operator#prometheus-configuration
    ##
    selector:
      prometheus: kube-prometheus


## Maxscale Configuration

# change master script should be a secret for security reasons

maxscale:
  enabled: true
  passive: true
  notify:
    email: kester.riley@mariadb.com
  changeMaster:
    name1: none
    name2: none
    host1: none
    host2: none
  image:
    registry: docker.io
    repository: kesterriley/mdb-test-10-4-maxscale
    tag: latest
    pullPolicy: Always
  masterOnlyService:
    type: NodePort
    port: 3306
    name: masteronly
    targetPort: 3306
  rwService:
    type: NodePort
    port: 3307
    name: rwsplit
    targetPort: 3307
  replicaCount: 2
  metrics:
    enabled: false
    image:
      repository: skord/maxscale_exporter
      tag: latest
      pullPolicy: IfNotPresent
    resources: {}
  serviceUser: maxscale
  monitorUser: maxscale-monitor
  resources:
    limits: {}
    #   cpu: 0.5
    #   memory: 256Mi
    requests: {}
    #   cpu: 0.5
    #   memory: 256Mi
  serviceMonitor:
    enabled: false
    selector:
      prometheus: kube-prometheus
  nameOverride: ""
  fullnameOverride: ""

  nodeSelector: {}
  tolerations: []
  affinity: {}


# Settings fro CronJob to backup pods

job:

  # The Kubernetes secret used to allow pulling the image from a private image registry.
  # This defaults to a blank string so that it is not used by default.
  imagePullSecretName: ""

  ## Pod Annotations
  podAnnotations:

  ## Extra environment variables that will be pass into pods
  env: {}
  #  key: value
  #  key: value

  ## Extra environment variables (from existing secrets) that will be pass into pods
  envFromSecret: {}
    # - name: DB_ROOT_USERNAME
    #   secretName: app-secret
    #   secretKeyRef: first-key

  # schedule: "* */4 * * *"
  schedule: "*/10 * * * *"

  resources: {}

  # Will suspend the cronjob if true
  suspend:

  # Deadline in seconds for starting the job if it misses scheduled time for any reason
  startingDeadlineSeconds:

  # The time in seconds to wait after the job completes or fails before removing
  ttlSecondsAfterFinished:

  persistence:
    enabled: true
    mountPath: /data/backups
    purgeDays: 7
    annotations:
    accessModes:
      - ReadWriteOnce
    size: 10Gi
    storageClass: "hostpath"
