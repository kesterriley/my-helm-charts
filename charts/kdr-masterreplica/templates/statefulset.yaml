apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "kdr-masterreplica.fullname" . }}
  labels: {{- include "kdr-masterreplica.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels: {{- include "kdr-masterreplica.matchLabels" . | nindent 6 }}
  replicas: 3
  serviceName: {{ template "kdr-masterreplica.fullname" . }}
  template:
    metadata:
      {{- if .Values.podAnnotations }}
      annotations: {{- include "kdr-masterreplica.tplValue" (dict "value" .Values.podAnnotations "context" $) | nindent 8 }}
      {{- end }}
      labels: {{- include "kdr-masterreplica.labels" . | nindent 8 }}
    spec:
      initContainers:
      - name: init-mariadb
        image: busybox
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ['sh', '-c', 'ordinal=`hostname | sed -r "s/([^0-9]*([0-9]*)){1}.*/\2/"`; echo [mysqld] > /mnt/conf.d/server-id.cnf;           echo server-id=$((100 + $ordinal)) >> /mnt/conf.d/server-id.cnf; echo "log-basename=`hostname`" >> /mnt/conf.d/server-id.cnf;cp /mnt/configmap/* /mnt/conf.d;']
        volumeMounts:
        - name: conf
          mountPath: /mnt/conf.d
        - name: config-map
          mountPath: /mnt/configmap
      containers:
      - name: mariadb
        image: {{ template "kdr-masterreplica.image" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
#        - name: TRACE
#          value: "y"
        - name: SKIP_TZINFO
          value: "y"
        - name: MAXSCALE_USER
          value: "maxscale"
        - name: MASTERHOST
          value: {{ .Values.maxscale.masterOnlyService.name }}.{{ .Release.Namespace }}.svc.{{ .Values.clusterDomain }}
        - name: BACKUPSTREAM
          value: {{ include "kdr-masterreplica.fullname" . }}-{{ .Values.mariabackup.backupServiceService.name }}.{{ .Release.Namespace }}.svc.{{ .Values.clusterDomain }}
        - name: MAXSCALE_USER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "kdr-masterreplica.fullname" . }}-secrets
              key: MAXSCALE_USER_PASSWORD
        - name: MAXSCALE_MONITOR_USER
          value: "maxscale-monitor"
        - name: MAXSCALE_MONITOR_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "kdr-masterreplica.fullname" . }}-secrets
              key: MAXSCALE_MONITOR_PASSWORD
        - name: MARIADB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "kdr-masterreplica.fullname" . }}-secrets
              key: mariadb-user-password
        - name: MARIADB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "kdr-masterreplica.fullname" . }}-secrets
              key: root-password
        - name: MARIADB_USER
          valueFrom:
            secretKeyRef:
              name: {{ template "kdr-masterreplica.fullname" . }}-secrets
              key: mariadb-user
        - name: MARIABACKUP_USER
          valueFrom:
            secretKeyRef:
              name: {{ template "kdr-masterreplica.fullname" . }}-secrets
              key: MARIABACKUP_USER
        - name: MARIABACKUP_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "kdr-masterreplica.fullname" . }}-secrets
              key: MARIABACKUP_PASSWORD
        - name: SYSTEM_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "kdr-masterreplica.fullname" . }}-secrets
              key: root-password
        args:
          - no-galera
        ports:
        - name: mariadb
          containerPort: 3306
        volumeMounts:
        - name: datadir
          mountPath: {{ .Values.persistence.mountPath }}
        - name: conf
          mountPath: /etc/my.cnf.d
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
        livenessProbe:
          exec:
            command: ["mysqladmin", "ping"]
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          exec:
            # Check we can execute queries over TCP (skip-networking is off).
            command: ["mariadb", "-umariadb", "-pmariadb", "-h127.0.0.1", "-e", "SELECT 1"]
          initialDelaySeconds: 30
          periodSeconds: 2
          timeoutSeconds: 1
      volumes:
      - name: conf
        emptyDir: {}
      - name: config-map
        configMap:
          name: {{ template "kdr-masterreplica.fullname" . }}-configuration
          items:
            - path: "docker.cnf"
              key: docker.cnf
  volumeClaimTemplates:
  - metadata:
      name: datadir
      labels:
          app.kubernetes.io/name: {{ include "kdr-masterreplica.name" . }}
          app.kubernetes.io/instance: {{ .Release.Name }}
          app.kubernetes.io/managed-by: {{ .Release.Service }}
    spec:
      accessModes:
        {{- range .Values.persistence.accessModes }}
          - {{ . | quote }}
        {{- end }}
      resources:
        requests:
          storage: {{ .Values.persistence.size | quote }}
      {{ include "kdr-masterreplica.storageClass" . }}
