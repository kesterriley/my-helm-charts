#/bin/bash

# Steven Wade <steven@stevenwade.co.uk @swade1987 http://www.stevenwade.co.uk>
# Kester Riley <kesterriley@hotmail.com>

apk add --no-cache openssh

set -o errexit
set -o nounset
set -o pipefail

: "${REPOSITORY_URL:?Environment variable REPOSITORY_URL must be set}"
: "${GIT_USERNAME:?Environment variable GIT_USERNAME must be set}"
: "${GIT_EMAIL:?Environment variable GIT_EMAIL must be set}"


main() {
  clonegit
  cleanup
  package_charts
  indexrepos
  checkoutgit
  publishfiles

}

clonegit() {
  echo "Cloning ${CIRCLE_REPOSITORY_URL}"
  tmp_dir=/tmp/build
  mkdir -p $tmp_dir
  #helm init --client-only
  cd ${tmp_dir}
  # SSH clone
  mkdir -p ~/.ssh
  ssh-keyscan github.com >> ~/.ssh/known_hosts
  git clone ${CIRCLE_REPOSITORY_URL}
  cd ${tmp_dir}/${CIRCLE_PROJECT_REPONAME}

}
cleanup() {

  echo "Cleaning up old files and directories"
  [[ -f index.yaml ]] && { echo "Removing old index.yaml file"; rm -rf index.yaml; } || echo "No existing index.yaml file"
  rm -rf *.tgz || true
  [[ -d .deploy ]] && { echo "Removing old deploy directory"; rm -rf .deploy; } || echo "No existing deploy directory"
  mkdir -p .deploy

}

package_charts() {

  echo "Checking for charts to package"
  for chart in charts/*
  do
   if [ $chart == 'charts/README.md' ]
   then
      continue
   fi
   printf "\nChecking %s\n" "${chart#*/}"
   helm package ${chart} --destination .deploy
   echo "Packaged chart ${chart}"
  done

}

indexrepos() {

  echo "Indexing repos"
  helm repo index .deploy --url https://${GIT_USERNAME}.github.io/${CIRCLE_PROJECT_REPONAME}

}

checkoutgit() {

  echo "Checking out gh-pages"
  git config user.email "$GIT_EMAIL"
  git config user.name "$GIT_USERNAME"
  git checkout gh-pages

}

publishfiles() {

  echo "Publishing files"
  # Move files from deployment location to root for publishing
  mv .deploy/index.yaml index.yaml
  mv .deploy/*.tgz .
  git add .
  git commit --message="Publishing latest charts." --signoff
  git push "$REPOSITORY_URL" gh-pages

}

main
